services:
  hiondev:
    image: europe-docker.pkg.dev/hiondev/hiondev/cli
    environment:
      PROJECT_ID:
      BUILD_TARGET:
      COMPOSE_PROJECT_NAME:
      HIONDEV_HOST_ROOT: ${HIONDEV_HOST_ROOT:-${PWD:-.}}
    volumes:
      - ${HIONDEV_HOST_ROOT:-.}:/app
      - cloudsql:/cloudsql
      - config:/root/.config
      - hiondev-root:/root
      - /var/run/docker.sock:/var/run/docker.sock

  dev:
    extends: app.base
    build:
      target: dev
      # secrets:
      #  - composer_auth
    environment:
      DB_HOST: db
      WP_REDIS_HOST: redis
      PROXY_URL: localhost:8080
      PS1: "[$COMPOSE_PROJECT_NAME $$HOSTNAME] [dev] \\w \\$ "
    ports:
      - 3000:3000
      - 3001:3001
    volumes:
      - ${HIONDEV_HOST_ROOT:-.}:/app
    depends_on:
      - db
      - redis
    profiles:
      - dev

  app:
    extends: app.base
    environment:
      DB_HOST: db
      WP_REDIS_HOST: redis
      PS1: "[$COMPOSE_PROJECT_NAME $$HOSTNAME] [app] \\w \\$ "
    depends_on:
      - db
      - redis
    profiles:
      - app

  staging:
    extends: app.base.cloudsql
    env_file: .env.app.staging
    environment:
      PS1: "[$COMPOSE_PROJECT_NAME $$HOSTNAME] [staging] \\w \\$ "
    depends_on:
      - sql_proxy
    profiles:
      - staging

  production:
    extends: app.base.cloudsql
    env_file: .env.app.production
    environment:
      PS1: "[$COMPOSE_PROJECT_NAME $$HOSTNAME] [production] \\w \\$ "
    depends_on:
      - sql_proxy
    profiles:
      - production

  db:
    image: mysql:8
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      PS1: "[$COMPOSE_PROJECT_NAME $$HOSTNAME] [db] \\w \\$ "
    volumes:
      - var-lib-mysql:/var/lib/mysql

  redis:
    image: redis:7

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686

  dev-trace:
    extends: dev
    environment:
      OTEL_PHP_AUTOLOAD_ENABLED: true
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_SERVICE_NAME: dev-trace
      PS1: "[$COMPOSE_PROJECT_NAME $$HOSTNAME] [dev-trace] \\w \\$ "

  sql_proxy:
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:latest
    command:
      - --unix-socket=/cloudsql
      - ${SQL_CONNECTION:-}
    user: root
    volumes:
      - cloudsql:/cloudsql
      - config:/root/.config

  app.base:
    build:
      target: app
    env_file: .env.app
    environment:
      PORT: "8080"
      K_SERVICE: dev
      K_REVISION: dev-00001
      K_CONFIGURATION: dev
      COMPOSE_PROJECT_NAME:
    ports:
      - 8080:8080
    privileged: true
    init: true
    volumes:
      - config:/root/.config
      - app-base-root:/root
      - /root/.vscode-server
    profiles:
      - app.base

  app.base.cloudsql:
    extends: app.base
    environment:
      DB_HOST: :/cloudsql/${SQL_CONNECTION:-}
      WP_REDIS_DISABLED: true
    volumes:
      - cloudsql:/cloudsql
    profiles:
      - app.base.cloudsql

volumes:
  var-lib-mysql:
  cloudsql:
  config:
  hiondev-root:
  app-base-root:
# secrets:
#  composer_auth:
#    file: ./auth.json
